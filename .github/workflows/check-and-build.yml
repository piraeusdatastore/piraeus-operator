name: check and build piraeus-operator
on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
jobs:
  prepare:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.19'
      # Cache go module sources
      - uses: actions/cache@v1
        id: go-cache
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: download sources
        run: go mod download

  golangci:
    runs-on: ubuntu-20.04
    needs: prepare
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          only-new-issues: true
          # Lints are more guidelines than actual rules
          args: --issues-exit-code=0

  checks:
    runs-on: ubuntu-20.04
    needs: prepare
    env:
      # These hooks will run separately in github actions
      SKIP: golangci-lint
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2
        with:
          go-version: '1.19'
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: set PY
        run: echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> ${GITHUB_ENV}
      # Cache pre-commit repos
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      # use go module sources
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-
      # Checks
      - name: Run pre-commit checks on changes files
        uses: pre-commit/action@v2.0.0
