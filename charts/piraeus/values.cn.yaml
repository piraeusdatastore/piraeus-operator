global:
  imagePullPolicy: IfNotPresent # empty pull policy means k8s default is used ("always" if tag == ":latest", "ifnotpresent" else)
# Dependency charts
etcd:
  persistentVolume:
    enabled: true
    storage: 1Gi
  replicas: 1 # How many instances of etcd will be added to the initial cluster.
  resources: {} # resource requirements for etcd containers
  image:
    repository: daocloud.io/piraeus/etcd
    tag: v3.4.9
csi-snapshotter:
  enabled: true # <- enable to add k8s snapshotting CRDs and controller. Needed for CSI snapshotting
  image: daocloud.io/piraeus/snapshot-controller:v2.1.0
  replicas: 1
  resources: {} # resource requirements for the cluster snapshot controller.
stork:
  enabled: true
  storkImage: daocloud.io/piraeus/stork:latest
  schedulerImage: daocloud.io/piraeus/kube-scheduler-amd64
  replicas: 1
  storkResources: {} # resources requirements for the stork plugin containers
  schedulerResources: {} # resource requirements for the kube-scheduler containers
csi:
  enabled: true
  pluginImage: daocloud.io/piraeus/piraeus-csi:v0.9.0
  csiAttacherImage: daocloud.io/piraeus/csi-attacher:v2.2.0
  csiNodeDriverRegistrarImage: daocloud.io/piraeus/csi-node-driver-registrar:v1.3.0
  csiProvisionerImage: daocloud.io/piraeus/csi-provisioner:v1.6.0
  csiSnapshotterImage: daocloud.io/piraeus/csi-snapshotter:v2.1.0
  csiResizerImage: daocloud.io/piraeus/csi-resizer:v0.5.0
  controllerReplicas: 1
  nodeAffinity: {}
  nodeTolerations: []
  controllerAffinity: {}
  controllerTolerations: []
  resources: {}
priorityClassName: ""
drbdRepoCred: drbdiocred # <- Specify the kubernetes secret name here
linstorHttpsControllerSecret: "" # <- name of secret containing linstor server certificates+key. See docs/security.md
linstorHttpsClientSecret: "" # <- name of secret containing linstor client certificates+key. See docs/security.md
operator:
  replicas: 1 # <- number of replicas for the operator deployment
  image: daocloud.io/piraeus/piraeus-operator:latest
  resources: {}
  controller:
    controllerImage: daocloud.io/piraeus/piraeus-server:v1.7.1
    luksSecret: ""
    dbCertSecret: ""
    dbUseClientCert: false
    sslSecret: ""
    affinity: {}
    tolerations: []
    resources: {}
  satelliteSet:
    satelliteImage: daocloud.io/piraeus/piraeus-server:v1.7.1
    storagePools: null
    sslSecret: ""
    automaticStorageType: None
    affinity: {}
    tolerations: []
    resources: {}
    kernelModuleInjectionImage: daocloud.io/piraeus/drbd9-bionic:v9.0.24
    kernelModuleInjectionMode: Compile
    kernelModuleInjectionResources: {}
